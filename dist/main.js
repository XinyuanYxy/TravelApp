var Client;(()=>{"use strict";var e={d:(t,n)=>{for(var d in n)e.o(n,d)&&!e.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:n[d]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};let n;async function d(e){e.preventDefault(),r();const t=document.getElementById("planlist"),n=document.getElementById("planlist").childElementCount+1,d=await Client.retrieveData(n),a=i(n,d);t.appendChild(a),o(d.time,n)}e.r(t),e.d(t,{generateCard:()=>i,generateCountdown:()=>o,generateHtml:()=>a,handleSubmit:()=>d,postCardData:()=>l,postFormData:()=>r,retrieveData:()=>u,timer:()=>n});const i=(e,t={})=>{let n=document.createElement("li");return n.innerHTML=a(e,t),n},o=(e,t)=>{let n=new Date(e).getTime();const d=document.getElementById(`cardcountdown${t}`);if(d.innerHTML="counting",n){let e=setInterval((function(){let t=(new Date).getTime(),i=n-t,o=Math.floor(i/864e5),a=Math.floor(i%864e5/36e5),r=Math.floor(i%36e5/6e4),l=Math.floor(i%6e4/1e3);if(i<0)return clearInterval(e),"EXPIRED";d.innerHTML=`${o} d ${a} h ${r} m ${l} s`}),1e3)}d.innerHTML="You have not put depart time yet!"},a=(e,t={})=>`<div id = "${e}" class="card" >\n\t<h5>Days left: </h5>\n\t<div id="cardcountdown${e}"> Counting... </div>\n\t<h5>Depart Time: </h5>\n\t<div id="cardtime${e}"> ${""===t.time?"You have not put any depart time yet":t.time}\n\t </div>\n\t<h5>City: </h5>\n\t<div id="cardcity${e}">${""===t.city?"you have not put city yet":t.city} </div>\n\t<h5>Country: </h5>\n\t<div id="cardcountry${e}">${""===t.country?"you have not put country yet":t.country}</div>\n\t<h5>Temperature Now: </h5>\n\t<div id="cardcurtemp${e}">${void 0===t.currentWeather?"you have not put city yet":t.currentWeather}</div>\n\t<h5>Temperature In Future: </h5>\n\t<div id="cardfuturetemp${e}"> ${void 0===t.futureWeather?"you have not put city yet":t.futureWeather}</div>\n\t<h5>Flight Time: </h5>\n\t<div id="cardftime${e}">${""===t.fTime?"you have not put flight time yet":t.fTime} </div>\n\t<h5>Flight Number: </h5>\n\t<div id="cardfnum${e}">${""===t.fNum?"you have not put flight number yet":t.fNum}</div>\n\t<h5>Flight Destination: </h5>\n\t<div id="cardfdes${e}">${""===t.fDes?"you have not put flight destination yet":t.fDes}</div>\n\t<h5>Lodging: </h5>\n\t<div id="cardlodging${e}">${""===t.lodging?"you have not put lodging yet":t.lodging}</div>\n\t<h5>Items: </h5>\n\t<div id="carditems${e}">${""===t.items?"you have not put items yet":t.items}</div>\n\t<h5>Notes: </h5>\n\t<div id="cardnotes${e}">${""===t.notes?"you have not put notes yet":t.notes}</div>\n\t<button>Edit</button>\n\t<button>Delete</button>\n    </div>\n\t`,r=async()=>{const e=document.getElementById("city").value,t=`${document.getElementById("planlist").childElementCount+1}`,n={city:e,country:document.getElementById("country").value,time:document.getElementById("time").value,fTime:document.getElementById("flighttime").value,fNum:document.getElementById("flightnumber").value,fDes:document.getElementById("flightdes").value,lodging:document.getElementById("lodging").value,items:document.getElementById("items").value,notes:document.getElementById("notes").value};await axios.post(`/add/${t}`,n)},l=async e=>{document.getElementById("id");const t={city:document.getElementById(`cardcity${e}`).value,country:document.getElementById(`cardcountry${e}`).value,time:document.getElementById(`cardtime${e}`).value,fTime:document.getElementById(`cardftime${e}`).value,fNum:document.getElementById(`cardfnum${e}`).value,fDes:document.getElementById(`cardfdes${e}`).value,lodging:document.getElementById(`cardlodging${e}`).value,items:document.getElementById(`carditems${e}`).value,notes:document.getElementById(`cardnotes${e}`).value};await axios.post(`/add/${e}`,t)},u=async e=>{try{return(await axios.get(`/getStorageData/${e}`)).data}catch(e){console.log(e)}};document.getElementById("planlist").addEventListener("click",(async e=>{if("BUTTON"===e.target.tagName){const t=e.target,d=t.parentNode,a=d.parentNode,r=d.childNodes,u=d.id;document.getElementById("city");if("Delete"===t.textContent)a.removeChild(d),clearInterval(n);else if("Edit"===t.textContent){clearInterval(n);for(let e=3;e<r.length;e++){let t=r[e];if("DIV"===t.nodeName){let n=document.createElement("input");t.id===`cardtime${u}`?n.type="date":t.id===`cardftime${u}`?n.type="time":(n.type="text",n.value=r[e].textContent),n.id=t.id,d.insertBefore(n,r[e]),d.removeChild(t)}}t.textContent="Save"}else if("Save"===t.textContent){clearInterval(n),l(u);const e=await Client.retrieveData(u),r=i(u,e);a.insertBefore(r,d),a.removeChild(d),o(e.time,u),t.textContent="Edit"}}})),Client=t})();
//# sourceMappingURL=main.js.map